## 変更 2012.02.13

リポジトリの初期コンテンツを作成し、ローカルでコミット

ローカルコンピュータ上の作業ディレクトリの好きな場所をエクスプローラーで表示し、リポジトリのトップディレクトリとなる「test」という名前のディレクトリを作成します。
作成した「test」ディレクトリを右クリックして、TortoiseGit のメニューから「Git Create repository here」を選択します。
「test」ディレクトリ内に「README.txt」というテキストファイルを作成し、内容を適当に作成してください。
「REEAME.txt」を文字コード UTF-8 で保存してください。（改行コードは LF などに統一することをお勧めします）
「README.txt」を右クリックし、TortoiseGit のメニューから「Git Add（または TortoiseGit メニュー内の Add）」を選択します。確認ウィンドウが表示されるので、README.txt にチェックがついていることを確認して、OK ボタンをクリックします。
これで、README.txt ファイルが「コミット対象リスト」にステージングされました。
「test」ディレクトリを右クリックし、TortoiseGit のメニューから「Git Commit -> "master"」というようなメニューを選択します。すると、コミット用のウィンドウが表示されます。
コミットメッセージを入力します。ここでは「first commit」としましょう。
コミットウィンドウの OK ボタンをクリックすると、コミットされます。
この時点では、ローカルコンピュータ上のリポジトリにコミットが記録されます。
ローカルのコミットを GitHub のリポジトリへ反映

ローカルのリポジトリの更新を、GitHub のリポジトリへ反映します。この操作を「プッシュ」といいます。
まず、プッシュするための設定を追加します。「test」ディレクトリを右クリックして TortoiseGit のメニューから「Settings」を選択します。
設定ウィンドウの設定項目で「Git」の「Remote」を選択します。
リモート設定画面で、以下のように入力します。
Remote: origin
Url: URL*1 を入力します。
Putty Key: 作成した SSH の秘密鍵のファイルを選択します。
入力が完了したら「Add New」をクリックして下さい。すると「Remote:」の一覧に「origin」が追加されます。
ウィンドウ右下の「適用」ボタンをクリックし、その後「キャンセル」ボタンをクリックして設定ウィンドウを閉じて下さい。
「test」ディレクトリを右クリックして TortoiseGit のメニューから「Git Sync...」を選択します。同期用のウィンドウが表示されます。
同期用のウィンドウで「Push」をクリックすると、GitHub への更新の適用処理が行われます。この処理には少しだけ時間がかかります。
プッシュが完了したら、ブラウザで GitHub のリポジトリへアクセスしてみてください。README.txt ファイルが正しく登録されていれば、ここまでの手順は完了です。
